{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ActionSheetIOS } from \"react-native-web/dist/index\";\nimport CircularProgress from 'react-native-circular-progress-indicator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Streak = function Streak(_ref) {\n  var streak = _ref.streak,\n    streakName = _ref.streakName,\n    onPress = _ref.onPress,\n    active = _ref.active,\n    createdDate = _ref.createdDate,\n    frequency = _ref.frequency,\n    onStreakTimeout = _ref.onStreakTimeout,\n    onDeleteStreak = _ref.onDeleteStreak,\n    onEditStreak = _ref.onEditStreak;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    canStreak = _useState4[0],\n    setCanStreak = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    seconds = _useState6[0],\n    setSeconds = _useState6[1];\n  var _useState7 = useState('Never'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lastStreaked = _useState8[0],\n    setLastStreaked = _useState8[1];\n  var containerStyle = [styles.streakContainer, active ? styles.activeStreakContainer : styles.inactiveStreakContainer];\n  var textStyle = active ? styles.activeStreakText : styles.inactiveStreakText;\n  var handlePress = function handlePress() {\n    if (active) {\n      if (canStreak) {\n        Alert.alert('Confirm Streak', 'Are you ready to add to your streak?', [{\n          text: 'Cancel',\n          style: 'cancel'\n        }, {\n          text: 'Confirm',\n          onPress: function onPress() {\n            incrementCount();\n            setSeconds(seconds * 2);\n            setCanStreak(false);\n          }\n        }]);\n      } else {\n        var interval;\n        if (frequency === 'Hourly') {\n          interval = 'hour';\n        } else if (frequency === 'Daily') {\n          interval = 'day';\n        } else if (frequency === 'Weekly') {\n          interval = 'week';\n        } else if (frequency === 'Monthly') {\n          interval = 'month';\n        }\n        Alert.alert('Cannot Streak', 'You can only add to this streak once every ' + interval + '');\n      }\n    } else {\n      incrementCount();\n    }\n  };\n  var incrementCount = function incrementCount() {\n    var newCount = count + 1;\n    setCount(newCount);\n    onPress();\n  };\n  useEffect(function () {\n    var interval;\n    var today = new Date().setHours(0, 0, 0, 0);\n    if (frequency === 'Hourly') {\n      interval = 5000;\n    } else if (frequency === 'Daily') {\n      interval = 10000;\n    } else if (frequency === 'Weekly') {\n      interval = 7 * 24 * 60 * 60 * 1000;\n    } else if (frequency === 'Monthly') {\n      var currentMonth = new Date().getMonth();\n      var nextMonth = currentMonth === 11 ? 0 : currentMonth + 1;\n      var nextMonthDate = new Date();\n      nextMonthDate.setMonth(nextMonth);\n      nextMonthDate.setDate(1);\n      nextMonthDate.setHours(0, 0, 0, 0);\n      var timeUntilNextMonth = nextMonthDate - today;\n      interval = timeUntilNextMonth;\n    }\n    setSeconds(interval / 1000 * 2);\n    var timer = setTimeout(function () {\n      setCanStreak(true);\n    }, interval);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [frequency, canStreak]);\n  useEffect(function () {\n    var countdownTimer;\n    if (active) {\n      countdownTimer = setInterval(function () {\n        setSeconds(function (prevSeconds) {\n          return prevSeconds - 1;\n        });\n      }, 1000);\n    }\n    if (seconds === 0 && active) {\n      clearInterval(countdownTimer);\n      onStreakTimeout(streakName);\n    }\n    if (!active) {\n      var currentDate = new Date().toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n      setLastStreaked(currentDate);\n    }\n    return function () {\n      clearInterval(countdownTimer);\n    };\n  }, [seconds, streakName, onStreakTimeout, active]);\n  var formattedDate = new Date(createdDate).toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  var handleLongPress = function handleLongPress() {\n    ActionSheetIOS.showActionSheetWithOptions({\n      options: ['Cancel', 'Edit', 'Deactivate', 'Delete'],\n      destructiveButtonIndex: 3,\n      cancelButtonIndex: 0\n    }, function (buttonIndex) {\n      if (buttonIndex === 1) {\n        onEditStreak(streak);\n      } else if (buttonIndex === 2) {\n        if (active) {\n          onStreakTimeout(streakName);\n        } else {\n          Alert.alert('Cannot Deactivate', 'This streak is already inactive');\n        }\n      } else if (buttonIndex === 3) {\n        onDeleteStreak();\n      }\n    });\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handlePress,\n    activeOpacity: 0.5,\n    onLongPress: handleLongPress,\n    children: _jsxs(View, {\n      style: containerStyle,\n      children: [_jsx(Text, {\n        style: textStyle,\n        numberOfLines: 1,\n        children: streakName\n      }), active && _jsx(CircularProgress, {\n        value: count,\n        maxValue: 10,\n        progressValueColor: \"#383D54\",\n        progressValueFontSize: 30,\n        radius: 45,\n        strokeColorConfig: [{\n          color: '#3DC330',\n          value: 0\n        }, {\n          color: '#6627B8',\n          value: 25\n        }, {\n          color: '#279AB8',\n          value: 50\n        }, {\n          color: '#D8E867',\n          value: 75\n        }, {\n          color: '#FF2200',\n          value: 100\n        }],\n        activeStrokeWidth: 15,\n        inActiveStrokeWidth: 15,\n        duration: 500\n      }), !active && _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.info,\n          children: [\"Last Streaked: \", lastStreaked]\n        }), _jsxs(Text, {\n          style: styles.info,\n          children: [\"Date Added: \", formattedDate]\n        })]\n      })]\n    })\n  });\n};\nexport default Streak;\nvar styles = StyleSheet.create({\n  streakContainer: {\n    width: '100%',\n    height: 70,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  inactiveStreakContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  activeStreakContainer: {\n    backgroundColor: 'white',\n    height: 150,\n    width: 150,\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  inactiveStreakText: {\n    fontSize: 18,\n    fontWeight: '300'\n  },\n  activeStreakText: {\n    fontSize: 18,\n    fontWeight: '300'\n  },\n  info: {\n    fontSize: 12,\n    fontWeight: '400',\n    color: '#909090'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","TouchableOpacity","View","Alert","ActionSheetIOS","CircularProgress","jsx","_jsx","jsxs","_jsxs","Streak","_ref","streak","streakName","onPress","active","createdDate","frequency","onStreakTimeout","onDeleteStreak","onEditStreak","_useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","canStreak","setCanStreak","_useState5","_useState6","seconds","setSeconds","_useState7","_useState8","lastStreaked","setLastStreaked","containerStyle","styles","streakContainer","activeStreakContainer","inactiveStreakContainer","textStyle","activeStreakText","inactiveStreakText","handlePress","alert","text","style","incrementCount","interval","newCount","today","Date","setHours","currentMonth","getMonth","nextMonth","nextMonthDate","setMonth","setDate","timeUntilNextMonth","timer","setTimeout","clearTimeout","countdownTimer","setInterval","prevSeconds","clearInterval","currentDate","toLocaleDateString","month","day","year","formattedDate","handleLongPress","showActionSheetWithOptions","options","destructiveButtonIndex","cancelButtonIndex","buttonIndex","activeOpacity","onLongPress","children","numberOfLines","value","maxValue","progressValueColor","progressValueFontSize","radius","strokeColorConfig","color","activeStrokeWidth","inActiveStrokeWidth","duration","info","create","width","height","backgroundColor","borderRadius","marginRight","alignItems","justifyContent","paddingHorizontal","marginBottom","paddingTop","paddingBottom","fontSize","fontWeight"],"sources":["/Users/shaaf/repos/streek/components/Streak.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, Alert, ActionSheetIOS } from 'react-native';\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nconst Streak = ({ streak, streakName, onPress, active, createdDate, frequency, onStreakTimeout, onDeleteStreak, onEditStreak }) => {\n  const [count, setCount] = useState(1);\n  const [canStreak, setCanStreak] = useState(false);\n  const [seconds, setSeconds] = useState(null);\n  const [lastStreaked, setLastStreaked] = useState('Never');\n\n  const containerStyle = [\n    styles.streakContainer,\n    active ? styles.activeStreakContainer : styles.inactiveStreakContainer,\n  ];\n\n  const textStyle = active ? styles.activeStreakText : styles.inactiveStreakText;\n\n  const handlePress = () => {\n    if (active) {\n      if (canStreak) {\n        Alert.alert(\n          'Confirm Streak',\n          'Are you ready to add to your streak?',\n          [\n            { text: 'Cancel', style: 'cancel' },\n            {\n              text: 'Confirm',\n              onPress: () => {\n                incrementCount();\n                setSeconds(seconds * 2);\n                setCanStreak(false);\n              },\n            },\n          ]\n        );\n      } else {\n        let interval;\n\n        if (frequency === 'Hourly') {\n          interval = 'hour';\n        } else if (frequency === 'Daily') {\n          interval = 'day';\n        } else if (frequency === 'Weekly') {\n          interval = 'week';\n        } else if (frequency === 'Monthly') {\n          interval = 'month';\n        }\n\n        Alert.alert('Cannot Streak', 'You can only add to this streak once every ' + interval + '');\n      }\n    } else {\n      incrementCount();\n    }\n  };\n\n  const incrementCount = () => {\n    const newCount = count + 1;\n    setCount(newCount);\n    onPress();\n  };\n\n  useEffect(() => {\n    let interval;\n    const today = new Date().setHours(0, 0, 0, 0);\n\n    if (frequency === 'Hourly') {\n      interval = 5000;\n    } else if (frequency === 'Daily') {\n      interval = 10000;\n    } else if (frequency === 'Weekly') {\n      interval = 7 * 24 * 60 * 60 * 1000;\n    } else if (frequency === 'Monthly') {\n      const currentMonth = new Date().getMonth();\n      const nextMonth = currentMonth === 11 ? 0 : currentMonth + 1;\n      const nextMonthDate = new Date();\n      nextMonthDate.setMonth(nextMonth);\n      nextMonthDate.setDate(1);\n      nextMonthDate.setHours(0, 0, 0, 0);\n      const timeUntilNextMonth = nextMonthDate - today;\n\n      interval = timeUntilNextMonth;\n    }\n\n    setSeconds((interval / 1000) * 2);\n\n    const timer = setTimeout(() => {\n      setCanStreak(true);\n    }, interval);\n\n    return () => clearTimeout(timer);\n  }, [frequency, canStreak]);\n\n  useEffect(() => {\n    let countdownTimer;\n\n    if (active) {\n      countdownTimer = setInterval(() => {\n        setSeconds((prevSeconds) => prevSeconds - 1);\n      }, 1000);\n    }\n\n    if (seconds === 0 && active) {\n      clearInterval(countdownTimer);\n      onStreakTimeout(streakName);\n    }\n\n    if (!active) {\n      const currentDate = new Date().toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      });\n      setLastStreaked(currentDate);\n    }\n\n    return () => {\n      clearInterval(countdownTimer);\n    };\n  }, [seconds, streakName, onStreakTimeout, active]);\n\n  const formattedDate = new Date(createdDate).toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n  });\n\n  const handleLongPress = () => {\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        options: ['Cancel', 'Edit', 'Deactivate', 'Delete'],\n        destructiveButtonIndex: 3,\n        cancelButtonIndex: 0,\n      },\n      buttonIndex => {\n        if (buttonIndex === 1) {\n          onEditStreak(streak);\n        } else if (buttonIndex === 2) {\n          if (active) {\n            onStreakTimeout(streakName);\n          } else {\n            Alert.alert('Cannot Deactivate', 'This streak is already inactive');\n          }\n        } else if (buttonIndex === 3) {\n          onDeleteStreak();\n        }\n      }\n    );\n  };\n\n  return (\n    <TouchableOpacity onPress={handlePress} activeOpacity={0.5} onLongPress={handleLongPress}>\n      <View style={containerStyle}>\n        <Text style={textStyle} numberOfLines={1}>\n          {streakName}\n        </Text>\n        {active && (\n          <CircularProgress\n            value={count}\n            maxValue={10}\n            progressValueColor=\"#383D54\"\n            progressValueFontSize={30}\n            radius={45}\n            strokeColorConfig={[\n              { color: '#3DC330', value: 0 },\n              { color: '#6627B8', value: 25 },\n              { color: '#279AB8', value: 50 },\n              { color: '#D8E867', value: 75 },\n              { color: '#FF2200', value: 100 },\n            ]}\n            activeStrokeWidth={15}\n            inActiveStrokeWidth={15}\n            duration={500}\n          />\n        )}\n        {!active && (\n          <View>\n            <Text style={styles.info}>Last Streaked: {lastStreaked}</Text>\n            <Text style={styles.info}>Date Added: {formattedDate}</Text>\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Streak;\n\nconst styles = StyleSheet.create({\n  streakContainer: {\n    width: '100%',\n    height: 70,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  inactiveStreakContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    paddingHorizontal: 10,\n    marginBottom: 10,\n  },\n  activeStreakContainer: {\n    backgroundColor: 'white',\n    height: 150,\n    width: 150,\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  inactiveStreakText: {\n    fontSize: 18,\n    fontWeight: '300',\n  },\n  activeStreakText: {\n    fontSize: 18,\n    fontWeight: '300',\n  },\n  info: {\n    fontSize: 12,\n    fontWeight: '400',\n    color: '#909090',\n  },\n});  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}