{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CircularProgress from 'react-native-circular-progress-indicator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Streak = function Streak(_ref) {\n  var streakName = _ref.streakName,\n    onPress = _ref.onPress,\n    active = _ref.active,\n    createdDate = _ref.createdDate;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var containerStyle = [styles.streakContainer, active ? styles.activeStreakContainer : styles.inactiveStreakContainer];\n  var textStyle = active ? styles.activeStreakText : styles.inactiveStreakText;\n  var handlePress = function handlePress() {\n    if (active) {\n      Alert.alert('Confirm Streek', 'Are you ready to add to your streek?', [{\n        text: 'Cancel',\n        style: 'cancel'\n      }, {\n        text: 'Confirm',\n        onPress: incrementCount\n      }]);\n    } else {\n      incrementCount();\n    }\n  };\n  var incrementCount = function incrementCount() {\n    var newCount = count + 1;\n    setCount(newCount);\n    onPress();\n  };\n  var formattedDate = new Date(createdDate).toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: handlePress,\n    activeOpacity: 0.5,\n    children: _jsxs(View, {\n      style: containerStyle,\n      children: [_jsx(Text, {\n        style: textStyle,\n        numberOfLines: 1,\n        children: streakName\n      }), active && _jsx(CircularProgress, {\n        value: count,\n        maxValue: 10,\n        progressValueColor: \"#383D54\",\n        progressValueFontSize: 30,\n        radius: 45,\n        strokeColorConfig: [{\n          color: '#3DC330',\n          value: 0\n        }, {\n          color: '#6627B8',\n          value: 25\n        }, {\n          color: '#279AB8',\n          value: 50\n        }, {\n          color: '#D8E867',\n          value: 75\n        }, {\n          color: '#FF2200',\n          value: 100\n        }],\n        activeStrokeWidth: 15,\n        inActiveStrokeWidth: 15,\n        duration: 500\n      }), !active && _jsxs(View, {\n        children: [!active && _jsxs(Text, {\n          style: styles.info,\n          children: [\"Last Streeked: \", count]\n        }), !active && _jsxs(Text, {\n          style: styles.info,\n          children: [\"Date Added: \", formattedDate]\n        })]\n      })]\n    })\n  });\n};\nexport default Streak;\nvar styles = StyleSheet.create({\n  streakContainer: {\n    width: '100%',\n    height: 70,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  inactiveStreakContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  activeStreakContainer: {\n    backgroundColor: 'white',\n    height: 150,\n    width: 150,\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  inactiveStreakText: {\n    fontSize: 18,\n    fontWeight: '300'\n  },\n  activeStreakText: {\n    fontSize: 18,\n    fontWeight: 300\n  },\n  info: {\n    fontSize: 12,\n    fontWeight: '400',\n    color: '#909090'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","TouchableOpacity","View","Alert","CircularProgress","jsx","_jsx","jsxs","_jsxs","Streak","_ref","streakName","onPress","active","createdDate","_useState","_useState2","_slicedToArray","count","setCount","containerStyle","styles","streakContainer","activeStreakContainer","inactiveStreakContainer","textStyle","activeStreakText","inactiveStreakText","handlePress","alert","text","style","incrementCount","newCount","formattedDate","Date","toLocaleDateString","month","day","year","activeOpacity","children","numberOfLines","value","maxValue","progressValueColor","progressValueFontSize","radius","strokeColorConfig","color","activeStrokeWidth","inActiveStrokeWidth","duration","info","create","width","height","backgroundColor","borderRadius","marginRight","alignItems","justifyContent","paddingHorizontal","marginBottom","paddingTop","paddingBottom","fontSize","fontWeight"],"sources":["/Users/shaaf/repos/streek/components/Streak.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, Alert } from 'react-native';\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nconst Streak = ({ streakName, onPress, active, createdDate }) => {\n  const [count, setCount] = useState(1);\n\n  const containerStyle = [\n    styles.streakContainer,\n    active ? styles.activeStreakContainer : styles.inactiveStreakContainer,\n  ];\n\n  const textStyle = active ? styles.activeStreakText : styles.inactiveStreakText;\n\n  const handlePress = () => {\n    if (active) {\n      Alert.alert(\n        'Confirm Streek',\n        'Are you ready to add to your streek?',\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Confirm', onPress: incrementCount },\n        ]\n      );\n    } else {\n      incrementCount();\n    }\n  };\n\n  const incrementCount = () => {\n    const newCount = count + 1;\n    setCount(newCount);\n    onPress();\n  };\n\n  const formattedDate = new Date(createdDate).toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n  });\n\n  return (\n    <TouchableOpacity onPress={handlePress} activeOpacity={0.5}>\n      <View style={containerStyle}>\n        <Text style={textStyle} numberOfLines={1}>{streakName}</Text>\n        {active && (\n          <CircularProgress\n            value={count}\n            maxValue={10}\n            progressValueColor=\"#383D54\"\n            progressValueFontSize={30}\n            radius={45}\n            strokeColorConfig={[\n              { color: '#3DC330', value: 0 },\n              { color: '#6627B8', value: 25 },\n              { color: '#279AB8', value: 50 },\n              { color: '#D8E867', value: 75 },\n              { color: '#FF2200', value: 100 },\n            ]}\n            activeStrokeWidth={15}\n            inActiveStrokeWidth={15}\n            duration={500}\n          />\n        )}\n        {!active && <View>\n          {!active && <Text style={styles.info}>Last Streeked: {count}</Text>}\n          {!active && <Text style={styles.info}>Date Added: {formattedDate}</Text>}\n        </View>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Streak;\n\nconst styles = StyleSheet.create({\n  streakContainer: {\n    width: '100%',\n    height: 70,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  inactiveStreakContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    paddingHorizontal: 10,\n    marginBottom: 10,\n  },\n  activeStreakContainer: {\n    backgroundColor: 'white',\n    height: 150,\n    width: 150,\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  inactiveStreakText: {\n    fontSize: 18,\n    fontWeight: '300',\n  },\n  activeStreakText: {\n    fontSize: 18,\n    fontWeight: 300,\n  },\n  info: {\n    fontSize: 12,\n    fontWeight: '400',\n    color: '#909090',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}