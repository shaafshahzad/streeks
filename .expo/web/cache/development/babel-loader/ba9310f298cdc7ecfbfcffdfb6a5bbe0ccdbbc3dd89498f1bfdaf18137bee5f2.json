{"ast":null,"code":"export var snapPoint = function snapPoint(value, velocity, points) {\n  \"worklet\";\n\n  var point = value + 0.2 * velocity;\n  var deltas = points.map(function (p) {\n    return Math.abs(point - p);\n  });\n  var minDelta = Math.min.apply(null, deltas);\n  return points.filter(function (p) {\n    return Math.abs(point - p) === minDelta;\n  })[0];\n};","map":{"version":3,"names":["snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter"],"sources":["/Users/shaaf/repos/streek/node_modules/react-native-redash/lib/module/Physics.ts"],"sourcesContent":["/**\n * @summary Select a point where the animation should snap to given the value of the gesture and it's velocity.\n * @worklet\n */\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  \"worklet\";\n  const point = value + 0.2 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n"],"mappings":"AAIA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAYA,CACvBC,KADuB,EAEvBC,QAFuB,EAGvBC,MAHuB,EAIZ;EACX;;EACA,IAAMC,KAAK,GAAGH,KAAK,GAAG,MAAMC,QAA5B;EACA,IAAMG,MAAM,GAAGF,MAAM,CAACG,GAAP,CAAW,UAACC,CAAD;IAAA,OAAOC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGG,CAAjB,CAAP;EAAA,CAAX,CAAf;EACA,IAAMG,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBP,MAArB,CAAjB;EACA,OAAOF,MAAM,CAACU,MAAP,CAAc,UAACN,CAAD;IAAA,OAAOC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGG,CAAjB,MAAwBG,QAA/B;EAAA,CAAd,EAAuD,CAAvD,CAAP;AACD,CAVM"},"metadata":{},"sourceType":"module","externalDependencies":[]}