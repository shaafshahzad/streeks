{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CircularProgress from 'react-native-circular-progress-indicator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Streak = function Streak(_ref) {\n  var streakName = _ref.streakName,\n    onPress = _ref.onPress,\n    active = _ref.active,\n    createdDate = _ref.createdDate;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var containerStyle = [styles.allStreakContainer, active && styles.activeStreakContainer];\n  var handlePress = function handlePress() {\n    setCount(count + 1);\n    onPress();\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handlePress,\n    children: _jsxs(View, {\n      style: containerStyle,\n      children: [_jsx(Text, {\n        children: streakName\n      }), active && _jsxs(Text, {\n        children: [\"Count: \", count]\n      }), _jsx(CircularProgress, {\n        value: count,\n        maxValue: 10,\n        radius: 50,\n        textColor: \"black\",\n        activeStrokeColor: \"red\",\n        inActiveStrokeColor: \"red\",\n        activeStrokeWidth: 5,\n        inActiveStrokeWidth: 5,\n        textStyle: {\n          fontSize: 20\n        },\n        activeStrokeSecondColor: \"red\",\n        inActiveStrokeSecondColor: \"red\",\n        activeStrokeSecondWidth: 5,\n        inActiveStrokeSecondWidth: 5,\n        activeStrokeCap: \"round\",\n        inActiveStrokeCap: \"round\",\n        activeStrokeRotation: 0,\n        inActiveStrokeRotation: 0,\n        activeStrokeOpacity: 1,\n        inActiveStrokeOpacity: 1,\n        activeStrokeDashArray: [0, 0],\n        inActiveStrokeDashArray: [0, 0],\n        activeStrokeDashOffset: 0,\n        inActiveStrokeDashOffset: 0\n      }), !active && _jsxs(Text, {\n        children: [\"Date Added: \", createdDate]\n      })]\n    })\n  });\n};\nexport default Streak;\nvar styles = StyleSheet.create({\n  allStreakContainer: {\n    width: '100%',\n    height: 70,\n    backgroundColor: 'red',\n    borderRadius: 5,\n    marginRight: 10,\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  activeStreakContainer: {\n    backgroundColor: 'red',\n    height: 150,\n    width: 150\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","CircularProgress","jsx","_jsx","jsxs","_jsxs","Streak","_ref","streakName","onPress","active","createdDate","_useState","_useState2","_slicedToArray","count","setCount","containerStyle","styles","allStreakContainer","activeStreakContainer","handlePress","children","style","value","maxValue","radius","textColor","activeStrokeColor","inActiveStrokeColor","activeStrokeWidth","inActiveStrokeWidth","textStyle","fontSize","activeStrokeSecondColor","inActiveStrokeSecondColor","activeStrokeSecondWidth","inActiveStrokeSecondWidth","activeStrokeCap","inActiveStrokeCap","activeStrokeRotation","inActiveStrokeRotation","activeStrokeOpacity","inActiveStrokeOpacity","activeStrokeDashArray","inActiveStrokeDashArray","activeStrokeDashOffset","inActiveStrokeDashOffset","create","width","height","backgroundColor","borderRadius","marginRight","marginTop","alignItems"],"sources":["/Users/shaaf/repos/streek/components/Streak.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nconst Streak = ({ streakName, onPress, active, createdDate }) => {\n\n    const [count, setCount] = useState(1);\n    const containerStyle = [\n        styles.allStreakContainer,\n        active && styles.activeStreakContainer,\n    ];\n    const handlePress = () => {\n        setCount(count + 1);\n        onPress();\n    };\n\n    return (\n        <TouchableOpacity onPress={handlePress}>\n            <View style={containerStyle}>\n                <Text>{ streakName }</Text>\n                {active && <Text>Count: {count}</Text>}\n                <CircularProgress\n                    value={count}\n                    maxValue={10}\n                    radius={50}\n                    textColor='black'\n                    activeStrokeColor='red'\n                    inActiveStrokeColor='red'\n                    activeStrokeWidth={5}\n                    inActiveStrokeWidth={5}\n                    textStyle={{ fontSize: 20 }}\n                    activeStrokeSecondColor='red'\n                    inActiveStrokeSecondColor='red'\n                    activeStrokeSecondWidth={5}\n                    inActiveStrokeSecondWidth={5}\n                    activeStrokeCap='round'\n                    inActiveStrokeCap='round'\n                    activeStrokeRotation={0}\n                    inActiveStrokeRotation={0}\n                    activeStrokeOpacity={1}\n                    inActiveStrokeOpacity={1}\n                    activeStrokeDashArray={[0, 0]}\n                    inActiveStrokeDashArray={[0, 0]}\n                    activeStrokeDashOffset={0}\n                    inActiveStrokeDashOffset={0}\n                />\n                {!active && <Text>Date Added: {createdDate}</Text>}\n            </View>\n        </TouchableOpacity>\n    )\n}\n\nexport default Streak;\n\nconst styles = StyleSheet.create({\n    allStreakContainer: {\n        width: '100%',\n        height: 70,\n        backgroundColor: 'red',\n        borderRadius: 5,\n        marginRight: 10,\n        marginTop: 10,\n        alignItems: 'center',\n    },\n    activeStreakContainer: {\n        backgroundColor: 'red',\n        height: 150,\n        width: 150,\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}