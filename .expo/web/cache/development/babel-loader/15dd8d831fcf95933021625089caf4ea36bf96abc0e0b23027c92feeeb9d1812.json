{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Streak = function Streak(_ref) {\n  var streakName = _ref.streakName,\n    onPress = _ref.onPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressed = _useState2[0],\n    setPressed = _useState2[1];\n  var handlePress = function handlePress() {\n    setPressed(!pressed);\n    onPress();\n  };\n  var containerStyle = pressed ? [styles.allStreakContainer, styles.activeStreakContainer] : styles.streakContainer;\n  return _jsx(TouchableOpacity, {\n    onPress: handlePress,\n    children: _jsx(View, {\n      style: styles.streakContainer,\n      children: _jsx(Text, {\n        children: streakName\n      })\n    })\n  });\n};\nexport default Streak;\nvar styles = StyleSheet.create({\n  allStreakContainer: {\n    width: '100%',\n    height: 70,\n    backgroundColor: 'red',\n    borderRadius: 5,\n    marginRight: 10,\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  activeStreakContainer: {\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","jsx","_jsx","Streak","_ref","streakName","onPress","_useState","_useState2","_slicedToArray","pressed","setPressed","handlePress","containerStyle","styles","allStreakContainer","activeStreakContainer","streakContainer","children","style","create","width","height","backgroundColor","borderRadius","marginRight","marginTop","alignItems"],"sources":["/Users/shaaf/repos/streek/components/Streak.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nconst Streak = ({ streakName, onPress }) => {\n    \n    const [pressed, setPressed] = useState(false);\n\n    const handlePress = () => {\n        setPressed(!pressed);\n        onPress();\n    };\n\n    const containerStyle = pressed\n        ? [styles.allStreakContainer, styles.activeStreakContainer]\n        : styles.streakContainer;\n\n    \n    return (\n        <TouchableOpacity onPress={handlePress}>\n            <View style={styles.streakContainer}>\n                <Text>{ streakName }</Text>\n            </View>\n        </TouchableOpacity>\n    )\n}\n\nexport default Streak;\n\nconst styles = StyleSheet.create({\n    allStreakContainer: {\n        width: '100%',\n        height: 70,\n        backgroundColor: 'red',\n        borderRadius: 5,\n        marginRight: 10,\n        marginTop: 10,\n        alignItems: 'center',\n    },\n    activeStreakContainer: {\n        backgroundColor: 'green',\n    },\n})"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGxC,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAAgC;EAAA,IAA1BC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAEjC,IAAAC,SAAA,GAA8BX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBD,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBJ,OAAO,CAAC,CAAC;EACb,CAAC;EAED,IAAMO,cAAc,GAAGH,OAAO,GACxB,CAACI,MAAM,CAACC,kBAAkB,EAAED,MAAM,CAACE,qBAAqB,CAAC,GACzDF,MAAM,CAACG,eAAe;EAG5B,OACIf,IAAA,CAACH,gBAAgB;IAACO,OAAO,EAAEM,WAAY;IAAAM,QAAA,EACnChB,IAAA,CAACF,IAAI;MAACmB,KAAK,EAAEL,MAAM,CAACG,eAAgB;MAAAC,QAAA,EAChChB,IAAA,CAACJ,IAAI;QAAAoB,QAAA,EAAGb;MAAU,CAAQ;IAAC,CACzB;EAAC,CACO,CAAC;AAE3B,CAAC;AAED,eAAeF,MAAM;AAErB,IAAMW,MAAM,GAAGjB,UAAU,CAACuB,MAAM,CAAC;EAC7BL,kBAAkB,EAAE;IAChBM,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,KAAK;IACtBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE;EAChB,CAAC;EACDX,qBAAqB,EAAE;IACnBO,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}