{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Home from \"./screens/Home\";\nimport SplashScreen from \"./screens/SplashScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var fadeAnim = useRef(new Animated.Value(1)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    splashLoaded = _useState2[0],\n    setSplashLoaded = _useState2[1];\n  useEffect(function () {\n    var fadeOut = Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 500,\n      useNativeDriver: true\n    });\n    var fadeIn = Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true\n    });\n    if (!splashLoaded) {\n      fadeOut.start(function () {\n        setSplashLoaded(true);\n        fadeIn.start();\n      });\n    }\n  }, [fadeAnim, splashLoaded]);\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: splashLoaded ? _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          gestureEnabled: false,\n          transitionSpec: {\n            open: {\n              animation: 'timing',\n              config: {\n                duration: 500\n              }\n            },\n            close: {\n              animation: 'timing',\n              config: {\n                duration: 500\n              }\n            }\n          },\n          cardStyleInterpolator: function cardStyleInterpolator(_ref) {\n            var progress = _ref.current.progress;\n            return {\n              cardStyle: {\n                opacity: progress\n              }\n            };\n          }\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"SplashScreen\",\n        component: SplashScreen,\n        options: {\n          gestureEnabled: false,\n          cardStyle: {\n            backgroundColor: '#76DBD1'\n          },\n          cardStyleInterpolator: function cardStyleInterpolator(_ref2) {\n            var progress = _ref2.current.progress;\n            return {\n              cardStyle: {\n                opacity: progress\n              }\n            };\n          }\n        }\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Animated","NavigationContainer","createStackNavigator","React","useEffect","useRef","useState","Home","SplashScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","fadeAnim","Value","current","_useState","_useState2","_slicedToArray","splashLoaded","setSplashLoaded","fadeOut","timing","toValue","duration","useNativeDriver","fadeIn","start","children","Navigator","screenOptions","headerShown","Screen","name","component","options","gestureEnabled","transitionSpec","open","animation","config","close","cardStyleInterpolator","_ref","progress","cardStyle","opacity","backgroundColor","_ref2","style","styles","create","container","flex","alignItems","justifyContent"],"sources":["/Users/shaaf/repos/streek/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Animated } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Home from './screens/Home';\nimport SplashScreen from './screens/SplashScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const fadeAnim = useRef(new Animated.Value(1)).current;\n  const [splashLoaded, setSplashLoaded] = useState(false);\n\n  useEffect(() => {\n    const fadeOut = Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 500,\n      useNativeDriver: true,\n    });\n\n    const fadeIn = Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true,\n    });\n\n    if (!splashLoaded) {\n      fadeOut.start(() => {\n        setSplashLoaded(true);\n        fadeIn.start();\n      });\n    }\n  }, [fadeAnim, splashLoaded]);\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        {splashLoaded ? (\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              gestureEnabled: false,\n              transitionSpec: {\n                open: { animation: 'timing', config: { duration: 500 } },\n                close: { animation: 'timing', config: { duration: 500 } },\n              },\n              cardStyleInterpolator: ({ current: { progress } }) => ({\n                cardStyle: {\n                  opacity: progress,\n                },\n              }),\n            }}\n          />\n        ) : (\n          <Stack.Screen\n            name=\"SplashScreen\"\n            component={SplashScreen}\n            options={{\n              gestureEnabled: false,\n              cardStyle: { backgroundColor: '#76DBD1' },\n              cardStyleInterpolator: ({ current: { progress } }) => ({\n                cardStyle: {\n                  opacity: progress,\n                },\n              }),\n            }}\n          />\n        )}\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}