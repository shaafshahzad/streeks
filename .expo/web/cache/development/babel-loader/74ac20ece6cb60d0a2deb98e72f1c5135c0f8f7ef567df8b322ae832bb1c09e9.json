{"ast":null,"code":"var PI = Math.PI;\nexport { PI };\nexport var TAU = PI * 2;\nexport var bin = function bin(value) {\n  \"worklet\";\n\n  return value ? 1 : 0;\n};\nexport var mix = function mix(value, x, y) {\n  \"worklet\";\n\n  return x * (1 - value) + y * value;\n};\nexport var approximates = function approximates(value, target) {\n  \"worklet\";\n\n  var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.001;\n  return Math.abs(value - target) < epsilon;\n};\nexport var normalizeRad = function normalizeRad(value) {\n  \"worklet\";\n\n  var rest = value % TAU;\n  return rest > 0 ? rest : TAU + rest;\n};\nexport var toDeg = function toDeg(rad) {\n  \"worklet\";\n\n  return rad * 180 / Math.PI;\n};\nexport var toRad = function toRad(deg) {\n  \"worklet\";\n\n  return deg * Math.PI / 180;\n};\nexport var avg = function avg(values) {\n  \"worklet\";\n\n  return values.reduce(function (a, v) {\n    return a + v;\n  }, 0) / values.length;\n};\nexport var between = function between(value, lowerBound, upperBound) {\n  \"worklet\";\n\n  var inclusive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  if (inclusive) {\n    return value >= lowerBound && value <= upperBound;\n  }\n  return value > lowerBound && value < upperBound;\n};\nexport var clamp = function clamp(value, lowerBound, upperBound) {\n  \"worklet\";\n\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\nexport var cubicBezier = function cubicBezier(t, from, c1, c2, to) {\n  \"worklet\";\n\n  var term = 1 - t;\n  var a = 1 * Math.pow(term, 3) * Math.pow(t, 0) * from;\n  var b = 3 * Math.pow(term, 2) * Math.pow(t, 1) * c1;\n  var c = 3 * Math.pow(term, 1) * Math.pow(t, 2) * c2;\n  var d = 1 * Math.pow(term, 0) * Math.pow(t, 3) * to;\n  return a + b + c + d;\n};\nexport var round = function round(value) {\n  \"worklet\";\n\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var p = Math.pow(10, precision);\n  return Math.round(value * p) / p;\n};\nvar cuberoot = function cuberoot(x) {\n  \"worklet\";\n\n  var y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n};\nvar solveCubic = function solveCubic(a, b, c, d) {\n  \"worklet\";\n\n  if (Math.abs(a) < 1e-8) {\n    a = b;\n    b = c;\n    c = d;\n    if (Math.abs(a) < 1e-8) {\n      a = b;\n      b = c;\n      if (Math.abs(a) < 1e-8) {\n        return [];\n      }\n      return [-b / a];\n    }\n    var D = b * b - 4 * a * c;\n    if (Math.abs(D) < 1e-8) {\n      return [-b / (2 * a)];\n    } else if (D > 0) {\n      return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n    }\n    return [];\n  }\n  var p = (3 * a * c - b * b) / (3 * a * a);\n  var q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  var roots;\n  if (Math.abs(p) < 1e-8) {\n    roots = [cuberoot(-q)];\n  } else if (Math.abs(q) < 1e-8) {\n    roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n  } else {\n    var _D = q * q / 4 + p * p * p / 27;\n    if (Math.abs(_D) < 1e-8) {\n      roots = [-1.5 * q / p, 3 * q / p];\n    } else if (_D > 0) {\n      var u = cuberoot(-q / 2 - Math.sqrt(_D));\n      roots = [u - p / (3 * u)];\n    } else {\n      var _u = 2 * Math.sqrt(-p / 3);\n      var t = Math.acos(3 * q / p / _u) / 3;\n      var k = 2 * Math.PI / 3;\n      roots = [_u * Math.cos(t), _u * Math.cos(t - k), _u * Math.cos(t - 2 * k)];\n    }\n  }\n  for (var i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n  return roots;\n};\nexport var cubicBezierYForX = function cubicBezierYForX(x, a, b, c, d) {\n  \"worklet\";\n\n  var precision = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2;\n  var pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n  var pb = 3 * a.x - 6 * b.x + 3 * c.x;\n  var pc = -3 * a.x + 3 * b.x;\n  var pd = a.x - x;\n  var t = solveCubic(pa, pb, pc, pd).map(function (root) {\n    return round(root, precision);\n  }).filter(function (root) {\n    return root >= 0 && root <= 1;\n  })[0];\n  return cubicBezier(t, a.y, b.y, c.y, d.y);\n};\nexport var fract = function fract(x) {\n  \"worklet\";\n\n  return x - Math.floor(x);\n};","map":{"version":3,"names":["PI","Math","TAU","bin","value","mix","x","y","approximates","target","epsilon","arguments","length","undefined","abs","normalizeRad","rest","toDeg","rad","toRad","deg","avg","values","reduce","a","v","between","lowerBound","upperBound","inclusive","clamp","min","max","cubicBezier","t","from","c1","c2","to","term","pow","b","c","d","round","precision","p","cuberoot","solveCubic","D","sqrt","q","roots","concat","_D","u","_u","acos","k","cos","i","cubicBezierYForX","pa","pb","pc","pd","map","root","filter","fract","floor"],"sources":["/Users/shaaf/repos/streek/node_modules/react-native-redash/lib/module/Math.ts"],"sourcesContent":["import type { Vector } from \"./Vectors\";\n\nexport const { PI } = Math;\nexport const TAU = PI * 2;\n\n/**\n * @summary Convert a boolean value into a number.\n * This can be useful in reanimated since 0 and 1 are used for conditional statements.\n * @worklet\n */\nexport const bin = (value: boolean): 0 | 1 => {\n  \"worklet\";\n  return value ? 1 : 0;\n};\n\n/**\n * Linear interpolation\n * @param value\n * @param x\n * @param y\n * @worklet\n */\nexport const mix = (value: number, x: number, y: number) => {\n  \"worklet\";\n  return x * (1 - value) + y * value;\n};\n\n/**\n * @summary Check is value is almost equal to the target.\n * @worklet\n */\nexport const approximates = (\n  value: number,\n  target: number,\n  epsilon = 0.001\n) => {\n  \"worklet\";\n  return Math.abs(value - target) < epsilon;\n};\n\n/**\n * @summary Normalize any radian value between 0 and 2PI.\n * For example, if the value is -PI/2, it will be comverted to 1.5PI.\n * Or 4PI will be converted to 0.\n * @worklet\n */\nexport const normalizeRad = (value: number) => {\n  \"worklet\";\n  const rest = value % TAU;\n  return rest > 0 ? rest : TAU + rest;\n};\n\n/**\n * @summary Transforms an angle from radians to degrees.\n * @worklet\n */\nexport const toDeg = (rad: number) => {\n  \"worklet\";\n  return (rad * 180) / Math.PI;\n};\n\n/**\n * @summary Transforms an angle from degrees to radians.\n * @worklet\n */\nexport const toRad = (deg: number) => {\n  \"worklet\";\n  return (deg * Math.PI) / 180;\n};\n\n/**\n *\n * @summary Returns the average value\n * @worklet\n */\nexport const avg = (values: number[]) => {\n  \"worklet\";\n  return values.reduce((a, v) => a + v, 0) / values.length;\n};\n\n/**\n * @summary Returns true if node is within lowerBound and upperBound.\n * @worklet\n */\nexport const between = (\n  value: number,\n  lowerBound: number,\n  upperBound: number,\n  inclusive = true\n) => {\n  \"worklet\";\n  if (inclusive) {\n    return value >= lowerBound && value <= upperBound;\n  }\n  return value > lowerBound && value < upperBound;\n};\n\n/**\n *  @summary Clamps a node with a lower and upper bound.\n *  @example\n    clamp(-1, 0, 100); // 0\n    clamp(1, 0, 100); // 1\n    clamp(101, 0, 100); // 100\n  * @worklet\n  */\nexport const clamp = (\n  value: number,\n  lowerBound: number,\n  upperBound: number\n) => {\n  \"worklet\";\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\n\n/**\n * @description Returns the coordinate of a cubic bezier curve. t is the length of the curve from 0 to 1.\n * cubicBezier(0, p0, p1, p2, p3) equals p0 and cubicBezier(1, p0, p1, p2, p3) equals p3.\n * p0 and p3 are respectively the starting and ending point of the curve. p1 and p2 are the control points.\n * @worklet\n */\nexport const cubicBezier = (\n  t: number,\n  from: number,\n  c1: number,\n  c2: number,\n  to: number\n) => {\n  \"worklet\";\n  const term = 1 - t;\n  const a = 1 * term ** 3 * t ** 0 * from;\n  const b = 3 * term ** 2 * t ** 1 * c1;\n  const c = 3 * term ** 1 * t ** 2 * c2;\n  const d = 1 * term ** 0 * t ** 3 * to;\n  return a + b + c + d;\n};\n\n/**\n * @summary Computes animation node rounded to precision.\n * @worklet\n */\nexport const round = (value: number, precision = 0) => {\n  \"worklet\";\n  const p = Math.pow(10, precision);\n  return Math.round(value * p) / p;\n};\n\n// https://stackoverflow.com/questions/27176423/function-to-solve-cubic-equation-analytically\nconst cuberoot = (x: number) => {\n  \"worklet\";\n  const y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n};\n\nconst solveCubic = (a: number, b: number, c: number, d: number) => {\n  \"worklet\";\n  if (Math.abs(a) < 1e-8) {\n    // Quadratic case, ax^2+bx+c=0\n    a = b;\n    b = c;\n    c = d;\n    if (Math.abs(a) < 1e-8) {\n      // Linear case, ax+b=0\n      a = b;\n      b = c;\n      if (Math.abs(a) < 1e-8) {\n        // Degenerate case\n        return [];\n      }\n      return [-b / a];\n    }\n\n    const D = b * b - 4 * a * c;\n    if (Math.abs(D) < 1e-8) {\n      return [-b / (2 * a)];\n    } else if (D > 0) {\n      return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n    }\n    return [];\n  }\n\n  // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n  const p = (3 * a * c - b * b) / (3 * a * a);\n  const q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  let roots;\n\n  if (Math.abs(p) < 1e-8) {\n    // p = 0 -> t^3 = -q -> t = -q^1/3\n    roots = [cuberoot(-q)];\n  } else if (Math.abs(q) < 1e-8) {\n    // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n    roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n  } else {\n    const D = (q * q) / 4 + (p * p * p) / 27;\n    if (Math.abs(D) < 1e-8) {\n      // D = 0 -> two roots\n      roots = [(-1.5 * q) / p, (3 * q) / p];\n    } else if (D > 0) {\n      // Only one real root\n      const u = cuberoot(-q / 2 - Math.sqrt(D));\n      roots = [u - p / (3 * u)];\n    } else {\n      // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n      const u = 2 * Math.sqrt(-p / 3);\n      const t = Math.acos((3 * q) / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n      const k = (2 * Math.PI) / 3;\n      roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)];\n    }\n  }\n\n  // Convert back from depressed cubic\n  for (let i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n\n  return roots;\n};\n\n/**\n *  @summary Given a cubic Bèzier curve, return the y value for x.\n *  @example\n    const x = 116;\n    const from = vec.create(59, 218);\n    const c1 = vec.create(131, 39);\n    const c2 = vec.create(204, 223);\n    const to = vec.create(227, 89);\n    // y= 139\n    const y = cubicBezierYForX(x, from, c1, c2, to)));\n  * @worklet\n  */\nexport const cubicBezierYForX = (\n  x: number,\n  a: Vector,\n  b: Vector,\n  c: Vector,\n  d: Vector,\n  precision = 2\n) => {\n  \"worklet\";\n  const pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n  const pb = 3 * a.x - 6 * b.x + 3 * c.x;\n  const pc = -3 * a.x + 3 * b.x;\n  const pd = a.x - x;\n  // eslint-disable-next-line prefer-destructuring\n  const t = solveCubic(pa, pb, pc, pd)\n    .map((root) => round(root, precision))\n    .filter((root) => root >= 0 && root <= 1)[0];\n  return cubicBezier(t, a.y, b.y, c.y, d.y);\n};\n\nexport const fract = (x: number) => {\n  \"worklet\";\n  return x - Math.floor(x);\n};\n"],"mappings":"AAEO,IAAQA,EAAR,GAAeC,IAAf,CAAQD,EAAR;;AACP,OAAO,IAAME,GAAG,GAAGF,EAAE,GAAG,CAAjB;AAOP,OAAO,IAAMG,GAAG,GAAG,SAANA,GAAMA,CAACC,KAAD,EAA2B;EAC5C;;EACA,OAAOA,KAAK,GAAG,CAAH,GAAO,CAAnB;AACD,CAHM;AAYP,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAMA,CAACD,KAAD,EAAgBE,CAAhB,EAA2BC,CAA3B,EAAyC;EAC1D;;EACA,OAAOD,CAAC,IAAI,IAAIF,KAAR,CAAD,GAAkBG,CAAC,GAAGH,KAA7B;AACD,CAHM;AASP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAeA,CAC1BJ,KAD0B,EAE1BK,MAF0B,EAIvB;EACH;;EADG,IADHC,OACG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADO,KACP;EAEH,OAAOV,IAAI,CAACa,GAAL,CAASV,KAAK,GAAGK,MAAjB,IAA2BC,OAAlC;AACD,CAPM;AAeP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAeA,CAACX,KAAD,EAAmB;EAC7C;;EACA,IAAMY,IAAI,GAAGZ,KAAK,GAAGF,GAArB;EACA,OAAOc,IAAI,GAAG,CAAP,GAAWA,IAAX,GAAkBd,GAAG,GAAGc,IAA/B;AACD,CAJM;AAUP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQA,CAACC,GAAD,EAAiB;EACpC;;EACA,OAAQA,GAAG,GAAG,GAAP,GAAcjB,IAAI,CAACD,EAA1B;AACD,CAHM;AASP,OAAO,IAAMmB,KAAK,GAAG,SAARA,KAAQA,CAACC,GAAD,EAAiB;EACpC;;EACA,OAAQA,GAAG,GAAGnB,IAAI,CAACD,EAAZ,GAAkB,GAAzB;AACD,CAHM;AAUP,OAAO,IAAMqB,GAAG,GAAG,SAANA,GAAMA,CAACC,MAAD,EAAsB;EACvC;;EACA,OAAOA,MAAM,CAACC,MAAP,CAAc,UAACC,CAAD,EAAIC,CAAJ;IAAA,OAAUD,CAAC,GAAGC,CAAd;EAAA,CAAd,EAA+B,CAA/B,IAAoCH,MAAM,CAACV,MAAlD;AACD,CAHM;AASP,OAAO,IAAMc,OAAO,GAAG,SAAVA,OAAUA,CACrBtB,KADqB,EAErBuB,UAFqB,EAGrBC,UAHqB,EAKlB;EACH;;EADG,IADHC,SACG,GAAAlB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADS,IACT;EAEH,IAAIkB,SAAJ,EAAe;IACb,OAAOzB,KAAK,IAAIuB,UAAT,IAAuBvB,KAAK,IAAIwB,UAAvC;EACD;EACD,OAAOxB,KAAK,GAAGuB,UAAR,IAAsBvB,KAAK,GAAGwB,UAArC;AACD,CAXM;AAqBP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQA,CACnB1B,KADmB,EAEnBuB,UAFmB,EAGnBC,UAHmB,EAIhB;EACH;;EACA,OAAO3B,IAAI,CAAC8B,GAAL,CAAS9B,IAAI,CAAC+B,GAAL,CAASL,UAAT,EAAqBvB,KAArB,CAAT,EAAsCwB,UAAtC,CAAP;AACD,CAPM;AAeP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAcA,CACzBC,CADyB,EAEzBC,IAFyB,EAGzBC,EAHyB,EAIzBC,EAJyB,EAKzBC,EALyB,EAMtB;EACH;;EACA,IAAMC,IAAI,GAAG,IAAIL,CAAjB;EACA,IAAMV,CAAC,GAAG,IAAAvB,IAAA,CAAAuC,GAAA,CAAID,IAAJ,EAAY,CAAZ,IAAAtC,IAAA,CAAAuC,GAAA,CAAgBN,CAAhB,EAAqB,CAArB,IAAyBC,IAAnC;EACA,IAAMM,CAAC,GAAG,IAAAxC,IAAA,CAAAuC,GAAA,CAAID,IAAJ,EAAY,CAAZ,IAAAtC,IAAA,CAAAuC,GAAA,CAAgBN,CAAhB,EAAqB,CAArB,IAAyBE,EAAnC;EACA,IAAMM,CAAC,GAAG,IAAAzC,IAAA,CAAAuC,GAAA,CAAID,IAAJ,EAAY,CAAZ,IAAAtC,IAAA,CAAAuC,GAAA,CAAgBN,CAAhB,EAAqB,CAArB,IAAyBG,EAAnC;EACA,IAAMM,CAAC,GAAG,IAAA1C,IAAA,CAAAuC,GAAA,CAAID,IAAJ,EAAY,CAAZ,IAAAtC,IAAA,CAAAuC,GAAA,CAAgBN,CAAhB,EAAqB,CAArB,IAAyBI,EAAnC;EACA,OAAOd,CAAC,GAAGiB,CAAJ,GAAQC,CAAR,GAAYC,CAAnB;AACD,CAdM;AAoBP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQA,CAACxC,KAAD,EAAkC;EACrD;;EADqD,IAAlByC,SAAkB,GAAAlC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAN,CAAM;EAErD,IAAMmC,CAAC,GAAG7C,IAAI,CAACuC,GAAL,CAAS,EAAT,EAAaK,SAAb,CAAV;EACA,OAAO5C,IAAI,CAAC2C,KAAL,CAAWxC,KAAK,GAAG0C,CAAnB,IAAwBA,CAA/B;AACD,CAJM;AAOP,IAAMC,QAAQ,GAAG,SAAXA,QAAWA,CAACzC,CAAD,EAAe;EAC9B;;EACA,IAAMC,CAAC,GAAGN,IAAI,CAACuC,GAAL,CAASvC,IAAI,CAACa,GAAL,CAASR,CAAT,CAAT,EAAsB,IAAI,CAA1B,CAAV;EACA,OAAOA,CAAC,GAAG,CAAJ,GAAQ,CAACC,CAAT,GAAaA,CAApB;AACD,CAJD;AAMA,IAAMyC,UAAU,GAAG,SAAbA,UAAaA,CAACxB,CAAD,EAAYiB,CAAZ,EAAuBC,CAAvB,EAAkCC,CAAlC,EAAgD;EACjE;;EACA,IAAI1C,IAAI,CAACa,GAAL,CAASU,CAAT,IAAc,IAAlB,EAAwB;IAEtBA,CAAC,GAAGiB,CAAJ;IACAA,CAAC,GAAGC,CAAJ;IACAA,CAAC,GAAGC,CAAJ;IACA,IAAI1C,IAAI,CAACa,GAAL,CAASU,CAAT,IAAc,IAAlB,EAAwB;MAEtBA,CAAC,GAAGiB,CAAJ;MACAA,CAAC,GAAGC,CAAJ;MACA,IAAIzC,IAAI,CAACa,GAAL,CAASU,CAAT,IAAc,IAAlB,EAAwB;QAEtB,OAAO,EAAP;MACD;MACD,OAAO,CAAC,CAACiB,CAAD,GAAKjB,CAAN,CAAP;IACD;IAED,IAAMyB,CAAC,GAAGR,CAAC,GAAGA,CAAJ,GAAQ,IAAIjB,CAAJ,GAAQkB,CAA1B;IACA,IAAIzC,IAAI,CAACa,GAAL,CAASmC,CAAT,IAAc,IAAlB,EAAwB;MACtB,OAAO,CAAC,CAACR,CAAD,IAAM,IAAIjB,CAAV,CAAD,CAAP;IACD,CAFD,MAEO,IAAIyB,CAAC,GAAG,CAAR,EAAW;MAChB,OAAO,CAAC,CAAC,CAACR,CAAD,GAAKxC,IAAI,CAACiD,IAAL,CAAUD,CAAV,CAAN,KAAuB,IAAIzB,CAA3B,CAAD,EAAgC,CAAC,CAACiB,CAAD,GAAKxC,IAAI,CAACiD,IAAL,CAAUD,CAAV,CAAN,KAAuB,IAAIzB,CAA3B,CAAhC,CAAP;IACD;IACD,OAAO,EAAP;EACD;EAGD,IAAMsB,CAAC,GAAG,CAAC,IAAItB,CAAJ,GAAQkB,CAAR,GAAYD,CAAC,GAAGA,CAAjB,KAAuB,IAAIjB,CAAJ,GAAQA,CAA/B,CAAV;EACA,IAAM2B,CAAC,GAAG,CAAC,IAAIV,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgB,IAAIjB,CAAJ,GAAQiB,CAAR,GAAYC,CAA5B,GAAgC,KAAKlB,CAAL,GAASA,CAAT,GAAamB,CAA9C,KAAoD,KAAKnB,CAAL,GAASA,CAAT,GAAaA,CAAjE,CAAV;EACA,IAAI4B,KAAJ;EAEA,IAAInD,IAAI,CAACa,GAAL,CAASgC,CAAT,IAAc,IAAlB,EAAwB;IAEtBM,KAAK,GAAG,CAACL,QAAQ,CAAC,CAACI,CAAF,CAAT,CAAR;EACD,CAHD,MAGO,IAAIlD,IAAI,CAACa,GAAL,CAASqC,CAAT,IAAc,IAAlB,EAAwB;IAE7BC,KAAK,GAAG,CAAC,CAAD,EAAIC,MAAJ,CAAWP,CAAC,GAAG,CAAJ,GAAQ,CAAC7C,IAAI,CAACiD,IAAL,CAAU,CAACJ,CAAX,CAAD,EAAgB,CAAC7C,IAAI,CAACiD,IAAL,CAAU,CAACJ,CAAX,CAAjB,CAAR,GAA0C,EAArD,CAAR;EACD,CAHM,MAGA;IACL,IAAMQ,EAAC,GAAIH,CAAC,GAAGA,CAAL,GAAU,CAAV,GAAeL,CAAC,GAAGA,CAAJ,GAAQA,CAAT,GAAc,EAAtC;IACA,IAAI7C,IAAI,CAACa,GAAL,CAASwC,EAAT,IAAc,IAAlB,EAAwB;MAEtBF,KAAK,GAAG,CAAE,CAAC,GAAD,GAAOD,CAAR,GAAaL,CAAd,EAAkB,IAAIK,CAAL,GAAUL,CAA3B,CAAR;IACD,CAHD,MAGO,IAAIQ,EAAC,GAAG,CAAR,EAAW;MAEhB,IAAMC,CAAC,GAAGR,QAAQ,CAAC,CAACI,CAAD,GAAK,CAAL,GAASlD,IAAI,CAACiD,IAAL,CAAUI,EAAV,CAAV,CAAlB;MACAF,KAAK,GAAG,CAACG,CAAC,GAAGT,CAAC,IAAI,IAAIS,CAAR,CAAN,CAAR;IACD,CAJM,MAIA;MAEL,IAAMC,EAAC,GAAG,IAAIvD,IAAI,CAACiD,IAAL,CAAU,CAACJ,CAAD,GAAK,CAAf,CAAd;MACA,IAAMZ,CAAC,GAAGjC,IAAI,CAACwD,IAAL,CAAW,IAAIN,CAAL,GAAUL,CAAV,GAAcU,EAAxB,IAA6B,CAAvC;MACA,IAAME,CAAC,GAAI,IAAIzD,IAAI,CAACD,EAAV,GAAgB,CAA1B;MACAoD,KAAK,GAAG,CAACI,EAAC,GAAGvD,IAAI,CAAC0D,GAAL,CAASzB,CAAT,CAAL,EAAkBsB,EAAC,GAAGvD,IAAI,CAAC0D,GAAL,CAASzB,CAAC,GAAGwB,CAAb,CAAtB,EAAuCF,EAAC,GAAGvD,IAAI,CAAC0D,GAAL,CAASzB,CAAC,GAAG,IAAIwB,CAAjB,CAA3C,CAAR;IACD;EACF;EAGD,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACxC,MAA1B,EAAkCgD,CAAC,EAAnC,EAAuC;IACrCR,KAAK,CAACQ,CAAD,CAAL,IAAYnB,CAAC,IAAI,IAAIjB,CAAR,CAAb;EACD;EAED,OAAO4B,KAAP;AACD,CA9DD;AA4EA,OAAO,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmBA,CAC9BvD,CAD8B,EAE9BkB,CAF8B,EAG9BiB,CAH8B,EAI9BC,CAJ8B,EAK9BC,CAL8B,EAO3B;EACH;;EADG,IADHE,SACG,GAAAlC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADS,CACT;EAEH,IAAMmD,EAAE,GAAG,CAACtC,CAAC,CAAClB,CAAH,GAAO,IAAImC,CAAC,CAACnC,CAAb,GAAiB,IAAIoC,CAAC,CAACpC,CAAvB,GAA2BqC,CAAC,CAACrC,CAAxC;EACA,IAAMyD,EAAE,GAAG,IAAIvC,CAAC,CAAClB,CAAN,GAAU,IAAImC,CAAC,CAACnC,CAAhB,GAAoB,IAAIoC,CAAC,CAACpC,CAArC;EACA,IAAM0D,EAAE,GAAG,CAAC,CAAD,GAAKxC,CAAC,CAAClB,CAAP,GAAW,IAAImC,CAAC,CAACnC,CAA5B;EACA,IAAM2D,EAAE,GAAGzC,CAAC,CAAClB,CAAF,GAAMA,CAAjB;EAEA,IAAM4B,CAAC,GAAGc,UAAU,CAACc,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAV,CACPC,GADO,CACH,UAACC,IAAD;IAAA,OAAUvB,KAAK,CAACuB,IAAD,EAAOtB,SAAP,CAAf;EAAA,CADG,EAEPuB,MAFO,CAEA,UAACD,IAAD;IAAA,OAAUA,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAA/B;EAAA,CAFA,EAEkC,CAFlC,CAAV;EAGA,OAAOlC,WAAW,CAACC,CAAD,EAAIV,CAAC,CAACjB,CAAN,EAASkC,CAAC,CAAClC,CAAX,EAAcmC,CAAC,CAACnC,CAAhB,EAAmBoC,CAAC,CAACpC,CAArB,CAAlB;AACD,CAlBM;AAoBP,OAAO,IAAM8D,KAAK,GAAG,SAARA,KAAQA,CAAC/D,CAAD,EAAe;EAClC;;EACA,OAAOA,CAAC,GAAGL,IAAI,CAACqE,KAAL,CAAWhE,CAAX,CAAX;AACD,CAHM"},"metadata":{},"sourceType":"module","externalDependencies":[]}