{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./screens/Home\";\nimport SplashScreen from \"./screens/SplashScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"SplashScreen\",\n        component: SplashScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          transitionSpec: {\n            open: {\n              animation: 'timing',\n              config: {\n                duration: 500\n              }\n            },\n            close: {\n              animation: 'timing',\n              config: {\n                duration: 500\n              }\n            }\n          },\n          cardStyleInterpolator: function cardStyleInterpolator(_ref) {\n            var progress = _ref.current.progress;\n            return {\n              cardStyle: {\n                opacity: progress,\n                transform: [{\n                  translateX: progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [200, 0]\n                  })\n                }]\n              }\n            };\n          }\n        }\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","NavigationContainer","createStackNavigator","Home","SplashScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","screenOptions","headerShown","Screen","name","component","options","transitionSpec","open","animation","config","duration","close","cardStyleInterpolator","_ref","progress","current","cardStyle","opacity","transform","translateX","interpolate","inputRange","outputRange","style","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/shaaf/repos/streek/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from './screens/Home';\nimport SplashScreen from './screens/SplashScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"SplashScreen\" component={SplashScreen} />\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            transitionSpec: {\n              open: {\n                animation: 'timing',\n                config: { duration: 500 },\n              },\n              close: {\n                animation: 'timing',\n                config: { duration: 500 },\n              },\n            },\n            cardStyleInterpolator: ({ current: { progress } }) => ({\n              cardStyle: {\n                opacity: progress,\n                transform: [\n                  {\n                    translateX: progress.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [200, 0],\n                    }),\n                  },\n                ],\n              },\n            }),\n          }}\n        />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,IAAI;AACX,OAAOC,YAAY;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,KAAK,GAAGP,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASQ,GAAGA,CAAA,EAAG;EAC5B,OACEF,KAAA,CAACP,mBAAmB;IAAAU,QAAA,GAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAH,QAAA,GACrDL,IAAA,CAACG,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEb;MAAa,CAAE,CAAC,EAC7DE,IAAA,CAACG,KAAK,CAACM,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEd,IAAK;QAChBe,OAAO,EAAE;UACPC,cAAc,EAAE;YACdC,IAAI,EAAE;cACJC,SAAS,EAAE,QAAQ;cACnBC,MAAM,EAAE;gBAAEC,QAAQ,EAAE;cAAI;YAC1B,CAAC;YACDC,KAAK,EAAE;cACLH,SAAS,EAAE,QAAQ;cACnBC,MAAM,EAAE;gBAAEC,QAAQ,EAAE;cAAI;YAC1B;UACF,CAAC;UACDE,qBAAqB,EAAE,SAAAA,sBAAAC,IAAA;YAAA,IAAcC,QAAQ,GAAAD,IAAA,CAAnBE,OAAO,CAAID,QAAQ;YAAA,OAAU;cACrDE,SAAS,EAAE;gBACTC,OAAO,EAAEH,QAAQ;gBACjBI,SAAS,EAAE,CACT;kBACEC,UAAU,EAAEL,QAAQ,CAACM,WAAW,CAAC;oBAC/BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;kBACtB,CAAC;gBACH,CAAC;cAEL;YACF,CAAC;UAAA;QACH;MAAE,CACH,CAAC;IAAA,CACa,CAAC,EAClB7B,IAAA,CAACT,SAAS;MAACuC,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACP,CAAC;AAE1B;AAEA,IAAMC,MAAM,GAAGvC,UAAU,CAACwC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}