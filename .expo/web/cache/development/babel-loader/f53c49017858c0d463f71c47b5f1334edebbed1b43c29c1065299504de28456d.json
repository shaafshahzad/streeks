{"ast":null,"code":"import { interpolateColor } from \"react-native-reanimated\";\nimport { clamp, fract, mix } from \"./Math\";\nexport var isLight = function isLight(r, g, b) {\n  \"worklet\";\n\n  var L = 0.299 * r + 0.587 * g + 0.114 * b;\n  return L > 186;\n};\nexport var mixColor = function mixColor(value, color1, color2) {\n  \"worklet\";\n\n  var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"RGB\";\n  return interpolateColor(value, [0, 1], [color1, color2], colorSpace);\n};\nexport var hsv2rgb = function hsv2rgb(h, s, v) {\n  \"worklet\";\n\n  var K = {\n    x: 1,\n    y: 2 / 3,\n    z: 1 / 3,\n    w: 3\n  };\n  var p = {\n    x: Math.abs(fract(h + K.x) * 6 - K.w),\n    y: Math.abs(fract(h + K.y) * 6 - K.w),\n    z: Math.abs(fract(h + K.z) * 6 - K.w)\n  };\n  var rgb = {\n    x: v * mix(s, K.x, clamp(p.x - K.x, 0, 1)),\n    y: v * mix(s, K.x, clamp(p.y - K.x, 0, 1)),\n    z: v * mix(s, K.x, clamp(p.z - K.x, 0, 1))\n  };\n  var r = Math.round(rgb.x * 255);\n  var g = Math.round(rgb.y * 255);\n  var b = Math.round(rgb.z * 255);\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n};\nexport var opacity = function opacity(c) {\n  \"worklet\";\n\n  return (c >> 24 & 255) / 255;\n};\nexport var red = function red(c) {\n  \"worklet\";\n\n  return c >> 16 & 255;\n};\nexport var green = function green(c) {\n  \"worklet\";\n\n  return c >> 8 & 255;\n};\nexport var blue = function blue(c) {\n  \"worklet\";\n\n  return c & 255;\n};","map":{"version":3,"names":["interpolateColor","clamp","fract","mix","isLight","r","g","b","L","mixColor","value","color1","color2","colorSpace","arguments","length","undefined","hsv2rgb","h","s","v","K","x","y","z","w","p","Math","abs","rgb","round","opacity","c","red","green","blue"],"sources":["/Users/shaaf/repos/streek/node_modules/react-native-redash/lib/module/Colors.ts"],"sourcesContent":["import { interpolateColor } from \"react-native-reanimated\";\n\nimport { clamp, fract, mix } from \"./Math\";\n\nexport type AnimatedColor = string | number;\n\n/**\n * @summary Returns black or white depending on the value of the background color.\n * @worklet\n */\nexport const isLight = (r: number, g: number, b: number) => {\n  \"worklet\";\n  const L = 0.299 * r + 0.587 * g + 0.114 * b;\n  return L > 186;\n};\n\n/**\n * Interpolate color from 0 to 1\n * @param value\n * @param color1\n * @param color2\n * @param colorSpace\n * @worklet\n */\nexport const mixColor = (\n  value: number,\n  color1: AnimatedColor,\n  color2: AnimatedColor,\n  colorSpace: \"RGB\" | \"HSV\" = \"RGB\"\n) => {\n  \"worklet\";\n  return interpolateColor(value, [0, 1], [color1, color2], colorSpace);\n};\n\nexport const hsv2rgb = (h: number, s: number, v: number) => {\n  \"worklet\";\n  const K = {\n    x: 1,\n    y: 2 / 3,\n    z: 1 / 3,\n    w: 3,\n  };\n  const p = {\n    x: Math.abs(fract(h + K.x) * 6 - K.w),\n    y: Math.abs(fract(h + K.y) * 6 - K.w),\n    z: Math.abs(fract(h + K.z) * 6 - K.w),\n  };\n  // return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n  const rgb = {\n    x: v * mix(s, K.x, clamp(p.x - K.x, 0, 1)),\n    y: v * mix(s, K.x, clamp(p.y - K.x, 0, 1)),\n    z: v * mix(s, K.x, clamp(p.z - K.x, 0, 1)),\n  };\n\n  const r = Math.round(rgb.x * 255);\n  const g = Math.round(rgb.y * 255);\n  const b = Math.round(rgb.z * 255);\n\n  return { r, g, b };\n};\n\nexport const opacity = (c: number): number => {\n  \"worklet\";\n  return ((c >> 24) & 255) / 255;\n};\n\nexport const red = (c: number): number => {\n  \"worklet\";\n  return (c >> 16) & 255;\n};\n\nexport const green = (c: number): number => {\n  \"worklet\";\n  return (c >> 8) & 255;\n};\n\nexport const blue = (c: number): number => {\n  \"worklet\";\n  return c & 255;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}